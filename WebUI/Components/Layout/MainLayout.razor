@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject IAuthService AuthService
@inject AuthenticationStateProvider AuthStateProvider
@inject IJSRuntime JSRuntime
<head>    

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">  

    <!-- Custom Styles -->
    <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="WebUI.styles.css" />   
   
</head>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
             <button class="btn btn-outline-danger" @onclick="Logout">
                        <i class="bi bi-box-arrow-right"></i> Logout
            </button>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code
{
    private async Task Logout()
    {
        try
        {
            @* await AuthService.LogoutAsync(); // Call the logout method to remove token
            await JSRuntime.InvokeVoidAsync("console.log", "User logged out"); // Debugging

            var customAuthProvider = AuthStateProvider as CustomAuthStateProvider;
            customAuthProvider?.NotifyUserLogout(); // Notify Blazor about logout *@

            Navigation.NavigateTo("/login", true); // Redirect to home page
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Logout failed: {ex.Message}");
        }
    }
}
